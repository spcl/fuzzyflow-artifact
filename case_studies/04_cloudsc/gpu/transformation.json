{"_subgraph":{},"exclude_copyin":"","exclude_copyout":"","exclude_tasklets":"","expr_index":0,"register_trans":true,"sdfg_id":60,"sequential_innermaps":true,"simplify":true,"skip_scalar_tasklets":true,"state_id":-1,"toplevel_trans":true,"transformation":"GPUTransformSDFG","type":"PatternTransformation","docstring":" Implements the GPUTransformSDFG transformation.\n\n        Transforms a whole SDFG to run on the GPU:\n\n            1. Acquire metadata about SDFG and arrays\n            2. Replace all non-transients with their GPU counterparts\n            3. Copy-in state from host to GPU\n            4. Copy-out state from GPU to host\n            5. Re-store Default-top/CPU_Heap transients as GPU_Global\n            6. Global tasklets are wrapped with a map of size 1\n            7. Global Maps are re-scheduled to use the GPU\n            8. Make data ready for interstate edges that use them\n            9. Re-apply simplification to get rid of extra states and transients\n    ","CATEGORY":"Global"}